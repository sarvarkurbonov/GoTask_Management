{
  "swagger": "2.0",
  "info": {
    "title": "GoTasker API",
    "description": "A simple and efficient task management REST API",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@gotasker.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/tasks": {
      "get": {
        "summary": "List all tasks",
        "description": "Retrieve a list of all tasks with optional status filter",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter tasks by status",
            "required": false,
            "type": "string",
            "enum": ["done", "undone"]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "description": "Create a new task with title and optional due date",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Task object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task created successfully",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get a task by ID",
        "description": "Retrieve a specific task by its ID",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a task",
        "description": "Update an existing task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Task update object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Delete a task by its ID",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tasks/due": {
      "get": {
        "summary": "Get due tasks",
        "description": "Get tasks that are due within specified days",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "description": "Number of days to look ahead (default: 7)",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API is healthy",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "API is healthy",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "task_1234567890"
        },
        "title": {
          "type": "string",
          "example": "Complete project documentation"
        },
        "done": {
          "type": "boolean",
          "example": false
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "example": "2024-01-15T10:30:00Z"
        },
        "due_date": {
          "type": "string",
          "format": "date-time",
          "example": "2024-01-20T23:59:59Z"
        }
      }
    },
    "TaskRequest": {
      "type": "object",
      "required": ["title"],
      "properties": {
        "title": {
          "type": "string",
          "example": "Complete project documentation"
        },
        "done": {
          "type": "boolean",
          "example": false
        },
        "due_date": {
          "type": "string",
          "format": "date-time",
          "example": "2024-01-20T23:59:59Z"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Task not found"
        }
      }
    }
  }
}